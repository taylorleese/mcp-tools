name: Publish to PyPI

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Publishing environment'
        required: true
        type: choice
        options:
          - pypi
          - testpypi
        default: testpypi

# Declare minimal permissions for all jobs
permissions: read-all

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6
        with:
          python-version: "3.13"
          cache: 'pip'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distribution
        run: python -m build

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4
        with:
          name: dist
          path: dist/
          retention-days: 5

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
      contents: read
    # Only run on actual releases, not manual workflow dispatches to TestPyPI
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.environment == 'pypi')

    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # release/v1

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing to TestPyPI
      contents: read
    # Only run on manual workflow dispatch to TestPyPI
    if: github.event_name == 'workflow_dispatch' && inputs.environment == 'testpypi'

    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4
        with:
          name: dist
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  sign-provenance:
    name: Sign with SLSA provenance
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for signing
      contents: write  # Required for attestation and release upload
      attestations: write
    # Only run on actual releases
    if: github.event_name == 'release'

    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4
        with:
          name: dist
          path: dist/

      - name: Attest build provenance
        id: attest
        uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c  # v1
        with:
          subject-path: 'dist/*'

      - name: Sign artifacts with Sigstore
        uses: sigstore/gh-action-sigstore-python@27dac9cce16c9883a0d4b51c9e0a520102d68016  # v3.0.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Upload attestations and signatures to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Upload attestation bundles (generated by attest-build-provenance)
          for file in dist/*; do
            filename=$(basename "$file")
            # Download attestation bundle from GitHub API
            gh attestation download "$file" \
              --owner ${{ github.repository_owner }} \
              -o "${filename}.jsonl" || echo "No attestation found for $filename"
          done

          # Upload all artifacts to the release
          gh release upload ${{ github.ref_name }} \
            dist/*.sigstore.json dist/*.jsonl --clobber || true
